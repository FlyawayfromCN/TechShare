(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{583:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"java-开发实战-高级工程师的自我修养之单元测试-一-dao-层测试"}},[t._v("[Java 开发实战] 高级工程师的自我修养之单元测试（一）：DAO 层测试")]),t._v(" "),a("h2",{attrs:{id:"开篇导读"}},[t._v("开篇导读")]),t._v(" "),a("p",[t._v("对于程序员而言，单元测试是非常重要的一项技能，但在许多实际的项目开发过程中，单元测试却往往被忽略，这导致部分人也忽视其重要性，因此在开篇请允许笔者先唠叨几句关于它的重要性，若读者朋友对这部分内容已经了然于胸可直接前往 "),a("code",[t._v("DAO 层测试")]),t._v(" 部分。")]),t._v(" "),a("p",[t._v("关于编写单元测试的一些基础知识，我在这篇 "),a("a",{attrs:{href:"https://github.com/lcomplete/TechShare/blob/master/docs/java/java%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.pptx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 单元测试"),a("OutboundLink")],1),t._v(" PPT 中有过介绍，本系列文章不再赘述，而旨在讲解在企业级项目中该如何编写单元测试。")]),t._v(" "),a("p",[t._v("这个系列计划编写三篇文章，DAO 层测试、业务逻辑层测试、高效编写测试。")]),t._v(" "),a("h3",{attrs:{id:"为什么单元测试很重要"}},[t._v("为什么单元测试很重要？")]),t._v(" "),a("p",[t._v("为什么说判断一个程序员是中级还是高级，看看 TA 会不会写单元测试就知道了，因为写单元测试不仅是写测试代码，往往还需要重新审视产品代码本身，必要的时候需要进行重构才能继续编写测试，在编写单元测试代码的过程中时刻都能体会到高内聚、低耦合的编程思想。写单元测试，其实是为对象模型添加了一个特殊用户，这个过程也迫使我们把对象模型设计的更加易用，总的说来编写单元测试可以加深对高内聚、低耦合、面向接口编程、依赖注入、API 设计、单一职责等"),a("code",[t._v("编程思想的掌握")]),t._v("，所以单元测试是如此重要，以至于可以很好地用来判断一个工程师的技术水平，或者至少用来判断其编程思想。")]),t._v(" "),a("h3",{attrs:{id:"为什么单元测试难以实施"}},[t._v("为什么单元测试难以实施?")]),t._v(" "),a("p",[t._v("很多小企业都难以实施单元测试，主要原因有：编写单元测试需要花费不少时间、单元测试并非想象中那样容易编写、开发人员对单元测试的理解不够全面等。还有一些更糟糕的情况，比如代码本身完成度不够，CRUD 功能背后缺少数据验证、服务端业务逻辑验证，系统本身就不堪一击，若要编写单元测试，需要做大量的代码改造工作，这种情况我愿称之为单元测试领域的「"),a("code",[t._v("戴维斯双杀")]),t._v("」效应——因为代码本身完成度低，原本完善的代码应当具有一定的复杂度，但在开发时却实现的极为简单，只满足了表面的功能，开发人员认为过于简单的代码没有编写单元测试的必要，导致产品代码质量下滑、对单元测试的理解扭曲的双重负循环。")]),t._v(" "),a("p",[t._v("单元测试难以实施，总的可以归结为开发能力和产品质量文化的原因，对于想长期发展的企业来说，无疑是会注重这两个方面，因此大多数企业也在不断克服这些问题，提升工程师的能力，加强编写单元测试的质量和效率，同时还要树立正确的产品质量观念，要知道即使是付出了额外的编写单元测试的时间，总的时间成本也并不会增加，因为「"),a("code",[t._v("质量是免费的")]),t._v("」，产品质量提升了，用于排查问题、修复 bug 的时间自然变少了。")]),t._v(" "),a("p",[t._v("在企业中注入产品质量文化，提升开发人员编写单元测试的能力，只要做到这些，实施单元测试也没有想象中困难。")]),t._v(" "),a("h2",{attrs:{id:"单元测试基本原则"}},[t._v("单元测试基本原则")]),t._v(" "),a("p",[t._v("首先要明确单元测试的一些基本原则，优秀的单元测试具有以下特点：")]),t._v(" "),a("ul",[a("li",[t._v("自动的、可重复的")]),t._v(" "),a("li",[t._v("容易实现")]),t._v(" "),a("li",[t._v("一旦写好，将来都可使用")]),t._v(" "),a("li",[t._v("任何人都可运行")]),t._v(" "),a("li",[t._v("单击一个按钮就可运行")]),t._v(" "),a("li",[t._v("可以快速地运行")])]),t._v(" "),a("p",[t._v("单元测试并非是随手写来验证功能的临时代码，而是需要符合 AIR 原则，所以编写起来是需要一定的功力的。")]),t._v(" "),a("p",[t._v("关于 AIR 原则在阿里的 Java 规范中有提及，其他相关的规范也值得学习，我在这里引用方便读者朋友查看，完整的规范可在 Github 中查看，地址："),a("a",{attrs:{href:"https://github.com/alibaba/p3c/blob/master/p3c-gitbook/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("p3c 单元测试"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("ol",[a("li",[t._v("【强制】好的单元测试必须遵守AIR原则。\n"),a("br"),a("span",{staticStyle:{color:"orange"}},[t._v("说明")]),t._v("：单元测试在线上运行时，感觉像空气（AIR）一样并不存在，但在测试质量的保障上，却是非常关键的。好的单元测试宏观上来说，具有自动化、独立性、可重复执行的特点。")])]),t._v(" "),a("ul",[a("li",[t._v("A：Automatic（自动化）")]),t._v(" "),a("li",[t._v("I：Independent（独立性）")]),t._v(" "),a("li",[t._v("R：Repeatable（可重复）")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("【强制】单元测试应该是全自动执行的，并且非交互式的。测试用例通常是被定期执行的，执行过程必须完全自动化才有意义。输出结果需要人工检查的测试不是一个好的单元测试。单元测试中不准使用System.out来进行人肉验证，必须使用assert来验证。")]),t._v(" "),a("li",[t._v("【强制】保持单元测试的独立性。为了保证单元测试稳定可靠且便于维护，单元测试用例之间决不能互相调用，也不能依赖执行的先后次序。 "),a("br"),a("span",{staticStyle:{color:"red"}},[t._v("反例")]),t._v("：method2需要依赖method1的执行，将执行结果作为method2的输入。")]),t._v(" "),a("li",[t._v("【强制】单元测试是可以重复执行的，不能受到外界环境的影响。\n"),a("br"),a("span",{staticStyle:{color:"orange"}},[t._v("说明")]),t._v("：单元测试通常会被放到持续集成中，每次有代码check in时单元测试都会被执行。如果单测对外部环境（网络、服务、中间件等）有依赖，容易导致持续集成机制的不可用。 "),a("br"),a("span",{staticStyle:{color:"green"}},[t._v("正例")]),t._v("：为了不受外界环境影响，要求设计代码时就把SUT的依赖改成注入，在测试时用spring 这样的DI框架注入一个本地（内存）实现或者Mock实现。")]),t._v(" "),a("li",[t._v("【强制】对于单元测试，要保证测试粒度足够小，有助于精确定位问题。单测粒度至多是类级别，一般是方法级别。\n"),a("br"),a("span",{staticStyle:{color:"orange"}},[t._v("说明")]),t._v("：只有测试粒度小才能在出错时尽快定位到出错位置。单测不负责检查跨类或者跨系统的交互逻辑，那是集成测试的领域。")]),t._v(" "),a("li",[t._v("【强制】核心业务、核心应用、核心模块的增量代码确保单元测试通过。\n"),a("br"),a("span",{staticStyle:{color:"orange"}},[t._v("说明")]),t._v("：新增代码及时补充单元测试，如果新增代码影响了原有单元测试，请及时修正。")])]),t._v(" "),a("p",[t._v("明确这些基本规范后，我们来开始动手编写单元测试。")]),t._v(" "),a("p",[t._v("完善的单元测试，应该对项目的每一层级代码都进行测试，本篇文章我们从 DAO 层开始。")]),t._v(" "),a("h2",{attrs:{id:"dao-层单元测试"}},[t._v("DAO 层单元测试")]),t._v(" "),a("p",[t._v("DAO 层由于依赖数据库，是比较难以测试的，这个章节将为你提供一些 DAO 层的测试方法。")]),t._v(" "),a("p",[t._v("以 MySQL 数据库为例，在运行 DAO 层的单元测试时，我们不能依赖外部的数据库，因为这会破坏 AIR 原则中的 I（独立性） 原则，要解除依赖有几种方式：")]),t._v(" "),a("ol",[a("li",[t._v("使用嵌入式数据库：h2、moby 等。")]),t._v(" "),a("li",[t._v("使用 Testcontainers 在 docker 中创建专为单元测试使用的数据库，执行完即销毁。")])]),t._v(" "),a("h3",{attrs:{id:"使用嵌入式数据库"}},[t._v("使用嵌入式数据库")]),t._v(" "),a("p",[t._v("我们先看第一种方式，以 h2 为例。")]),t._v(" "),a("p",[t._v("首先，在单元测试的应用配置 "),a("code",[t._v("application.yml")]),t._v(" 中修改数据源为 h2。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" org.h2.Driver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("h2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ufo\n")])])]),a("p",[t._v("如果我们使用的是 JPA 进行数据持久化，配置这些即可，JPA 会在 h2 数据库中自动创建数据库。")]),t._v(" "),a("p",[t._v("若使用的是 MyBatis，则需要指定数据库的架构，增加以下配置，"),a("code",[t._v("data")]),t._v(" 为数据初始化脚本。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("db/schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h2.sql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("db/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("h2.sql\n")])])]),a("p",[t._v("假如我们的项目非常小，用这种方式就足够，但当数据库 "),a("code",[t._v("schema")]),t._v(" 越来越庞大时，维护 sql 将变成一项耗时的工作，那么我们需要引入数据库的版本控制机制。")]),t._v(" "),a("h3",{attrs:{id:"数据库版本控制"}},[t._v("数据库版本控制")]),t._v(" "),a("p",[t._v("数据库版本控制可以使用 "),a("code",[t._v("flyway")]),t._v(" 或者 "),a("code",[t._v("liquibase")]),t._v("，关于 liquibase 的用法，可以参考我写的 "),a("a",{attrs:{href:"https://lcomplete.github.io/TechShare/docs/java/liquibase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("5 分钟搞定 liquibase 数据库版本控制"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("p",[t._v("以 liquibase 为例，引入后，我们在 "),a("code",[t._v("application.yml")]),t._v(" 进行如下类似修改，单元测试运行时将首先通过 liquibase 初始化数据库。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("liquibase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("change-log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("liquibase/master.xml\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contexts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unit_test\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("注意，此时我们编写的版本控制 sql 是为 MySQL 数据库准备的，若直接用于 h2 数据库，大概率会出现兼容性问题，此时我们有以下几个选择：")]),t._v(" "),a("ol",[a("li",[t._v("将用于 MySQL 的 sql 脚本稍作修改，用于 h2 数据库初始化。")]),t._v(" "),a("li",[t._v("使用 liquibase 的 xml 语法来定义数据库结构，减少兼容性问题。")]),t._v(" "),a("li",[t._v("改用 "),a("code",[t._v("Testcontainers")]),t._v(" 辅助测试。")])]),t._v(" "),a("p",[t._v("前面两个选择，都需要增加不小的工作量，我们来看看使用 Testcontainers 会如何。")]),t._v(" "),a("h3",{attrs:{id:"使用-testcontainers"}},[t._v("使用 Testcontainers")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/testcontainers/testcontainers-java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Testcontainers"),a("OutboundLink")],1),t._v("  是一个支持 "),a("code",[t._v("JUnit")]),t._v(" 测试的开源库，可以利用 "),a("code",[t._v("Docker")]),t._v(" 容器获得 "),a("code",[t._v("即用即丢")]),t._v(" 数据库的能力。")]),t._v(" "),a("p",[t._v("我们跳过了别的选项，直接选择 Testcontainers，因为使用嵌入式数据库还有一些缺点，比如 DAO 层使用了特定数据库才有的语法，那么单元测试根本都无法通过，这在企业级项目中几乎是无法避免的，除非是特别独立单一的服务。")]),t._v(" "),a("p",[t._v("DAO 层单元测试不应该依赖外部数据库，但在执行时也应当使用类生产的环境，这样的测试结果才更准确的。")]),t._v(" "),a("p",[t._v("使用 Testcontainers 并 "),a("code",[t._v("不符合 AIR 原则")]),t._v("，因为其依赖了 Docker 环境，如果在一台没有 Docker 环境的机器上运行，那么测试就会失败，另外它也不符合可以快速地运行这一点，毕竟初始化 Docker 容器是需要一定的时间的。")]),t._v(" "),a("p",[t._v("我们看下如何在代码中使用 Testcontainers 。")]),t._v(" "),a("p",[t._v("首先定义一个抽象的测试基类，具体的单元测试继承自该类，以下写法可以确保数据库只初始化一次。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ContextConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initializers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractUnitTest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DockerMySQLDataSourceInitializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractUnitTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySQLContainer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       mysql "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySQLContainer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mysql:8.0.11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDatabaseName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbname"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DockerMySQLDataSourceInitializer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContextInitializer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableApplicationContext")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestPropertySourceUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addInlinedPropertiesToEnvironment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                   applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring.datasource.url="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJdbcUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring.datasource.username="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUsername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring.datasource.password="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spring.datasource.driver-class-name="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDriverClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("准备就绪后，在单元测试执行时将首先创建 Docker 容器，然后运行 liquibase 初始化数据库。")]),t._v(" "),a("p",[t._v("来看一个简单的 DAO 层测试的例子。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TestInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PER_CLASS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSiteRepositoryTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractUnitTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSiteRepository")]),t._v(" navSiteRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BeforeClass")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSite")]),t._v(" navSite "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSiteName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSiteUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIconPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSiteType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCreateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUpdateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        navSiteRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navSite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findBySiteType_UnknownSiteType_ZeroSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" navSites "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" navSiteRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findBySiteType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navSites"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findBySiteType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavSite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" navSites "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" navSiteRepository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findBySiteType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("navSites"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("至此，我们就实现了 "),a("code",[t._v("JUnit5 + Testcontainers + Liquibase")]),t._v(" 进行 DAO 层测试。")]),t._v(" "),a("h3",{attrs:{id:"方案取舍"}},[t._v("方案取舍")]),t._v(" "),a("p",[t._v("应该在使用嵌入式数据库、Docker和专用测试数据库之间进行取舍，目前的持续集成环境中基本都有 Docker 环境，相信 Testcontainers 也会越来越流行，就算不用在单元测试中，在 "),a("code",[t._v("集成测试")]),t._v(" 中进行使用也是非常有用的一大利器。")]),t._v(" "),a("p",[t._v("总结如下：")]),t._v(" "),a("ol",[a("li",[t._v("在简单的项目中使用 h2 或其他嵌入式数据库进行 DAO 层测试。")]),t._v(" "),a("li",[t._v("在特定的场景下选择 Testcontainers，可以设法令其符合 AIR 原则并能快速运行，比如在 liquibase 项目中用于测试版本控制 sql 就是个不错的选择。")]),t._v(" "),a("li",[t._v("集成测试中可尽管选用 Testcontainers 。")])]),t._v(" "),a("h2",{attrs:{id:"写在最后"}},[t._v("写在最后")]),t._v(" "),a("p",[t._v("DAO 层的测试难点主要在解除数据库这一外部依赖上，DAO 层的业务逻辑代码较少，因此单元测试编写起来也比较简单，而复杂的 Service 层代码则不一样，容易出现单元测试难以编写的情况，这时需要优化代码设计，这部分内容我们在下一篇 "),a("code",[t._v("业务逻辑层测试")]),t._v(" 中详述。")])])}),[],!1,null,null,null);s.default=e.exports}}]);